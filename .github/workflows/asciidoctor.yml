# This is a basic workflow to help you get started with Actions

name: asciidoctor

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  adoc_build:
    runs-on: ubuntu-18.04
    name: asciidoctor -D html --backend=html5 -o index.html -a toc cdb-2.0.adoc 
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Get build container and run
      id: adocbuild
      uses: avattathil/asciidoctor-action@master
      with:
          program: "asciidoctor -D html --backend=html5 -o index.html -a toc cdb-2.0.adoc"  
          
#    - name: upload generated html
#      uses: actions/upload-artifact@v2
#      with:
#        name: html
#        path: ./html
        
#    - name: download html
#      uses: actions/download-artifact@v2
#      with:
#        name: html
    
    - name: Display structure of downloaded files
      run: ls -R

    - name: Add and commit html
      uses: EndBug/add-and-commit@v4 # You can change this to use a specific version
      with:
        # The arguments for the `git add` command (see the paragraph below for more info)
        # Default: '.'
        add: 'html'
        
        # The message for the commit
        # Default: 'Commit from GitHub Actions'
        message: 'asciidoctor auto-run'

        # The name of the user that will be displayed as the author of the commit
        # Default: author of the commit that triggered the run
        #author_name: Your Name

        # The email of the user that will be displayed as the author of the commit
        # Default: author of the commit that triggered the run
        #author_email: mail@example.com

        # The local path to the directory where your repository is located. You should use actions/checkout first to set it up
        # Default: '.'
        #cwd: './path/to/the/repo'

        # Whether to use the --force option on `git add`, in order to bypass eventual gitignores
        # Default: false
        #force: true

        # Name of the branch to use, if different from the one that triggered the workflow
        # Default: the branch that triggered the workflow (from GITHUB_REF)
        #ref: 'someOtherBranch'

        # The arguments for the `git rm` command (see the paragraph below for more info)
        # Default: ''
        #remove: "./dir/old_file.js"

        # Name of the tag to add to the new commit (see the paragraph below for more info)
        # Default: ''
        #tag: "v1.0.0"

    env:
      # This is necessary in order to push a commit to the repo
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Leave this line unchanged
